% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protocol.R
\name{protocol}
\alias{protocol}
\title{Define a named protocol for an emulated trial}
\usage{
protocol(
  x,
  name,
  intervention,
  treatment_variables,
  intervene_function = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{x}{An rtmle object as obtained with \code{rtmle_init}.}

\item{name}{The name of the protocol of an emulated trial}

\item{intervention}{A vector or a data.frame (or tibble or data.table) with names of treatment variables set
   to the value that the protocol of an emulated trial dictates. 
   If it is a vector, it should consist of values 0 and 1 corresponding to what the
intervention would set for the \code{treatment_variables}. If
it is a data.frame (tibble, data.table), the names specify the
treatment variables and the argument
\code{treatment_variables} is ignored.  Each column must be a
factor with levels specifying the treatment options. In
longitudinal settings, there can either be only one row in the
data.frame and then it is assumed that the intervention is
static throughout the followup period. The data.frame can also
have a column named time and specify for each time point the
values that the intervention sets for the treatment variables.}

\item{treatment_variables}{A vector with the name(s) of the
variable(s) that the protocols intervenes upon. In
longitudinal settings, when a treatment variable is named "A"
then the prepared data will contain a column for each of the
variables A_0,A_1,----,A_k. This argument can be left
unspecified in which case the argument \code{intervention}
must be given.}

\item{intervene_function}{A character string: The name of a function
   used to intervene under the protocol. Defaults to \code{"intervene"}
   which implements static interventions. The function will be called from
the internal function intervention_probabilities with two arguments: the
current time interval and the current history of all
variables. The function determines the value(s) of the
treatment variable(s) under the intervention and should return
a matrix with as many columns as there are treatment variables}

\item{verbose}{Logical. If \code{FALSE} suppress all messages. \code{TRUE} is the default.}

\item{...}{Not (yet) used}
}
\value{
The modified object contains the treatment variables and
    the intervention_table as list elemens of
    \code{x$protocols[[name]]} where name is given by
    \code{value$name}
}
\description{
This function adds a protocol to an existing object.  A protocol
defines the values of the treatment variable(s) at each time point
during followup including at time zero (baseline).
}
\examples{
# ------------------------------------------------------------------------------------------
# Intervening on a single treatment variable
# ------------------------------------------------------------------------------------------
x <- rtmle_init(intervals = 3,name_id = "id",name_outcome = "Y",name_competing = "Dead",
                name_censoring = "Censored",censored_label = "censored")
x <- protocol(x,name = "Always_A",
                intervention = data.frame("A" = factor("1",levels = c("0","1"))))
x <- protocol(x,name = "Never_A",
              intervention = data.frame("A" = factor("0",levels = c("0","1"))))
x <- protocol(x,name = "Initiate_A_then_stop",
              intervention = data.frame("A" = factor(c("1","0","0"),levels = c("0","1"))))
x$protocols
# ------------------------------------------------------------------------------------------
# Intervening on a more than one treatment variable
# ------------------------------------------------------------------------------------------
x <- rtmle_init(intervals = 3,name_id = "id",name_outcome = "Y",name_competing = "Dead",
                name_censoring = "Censored",censored_label = "censored")
x <- protocol(x,name = "Always_A_never_B",
                intervention = data.frame("A" = factor("1",levels = c("0","1")),
                                     "B" = factor("0",levels = c("0","1"))))
x <- protocol(x,name = "Always_A_and_B_never_C",
                    intervention = data.frame("A" = factor("1",levels = c("0","1")),
                                              "B" = factor("1",levels = c("0","1")),
                                              "C" = factor("0",levels = c("0","1"))))
x$protocols
}
\author{
Thomas A Gerds \email{tag@biostat.ku.dk}
}
