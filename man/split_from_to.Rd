% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_from_to.R
\name{split_from_to}
\alias{split_from_to}
\title{split_from_to}
\usage{
split_from_to(indat,splitdat,invars,splitvars,default="0",datacheck=TRUE)
}
\arguments{
\item{indat}{- base data with id, start, end and other data - possibly 
already split}

\item{splitdat}{- Data with splitting guide - id/from/to/value/name}

\item{invars}{- vector of column names for id/entry/exit - in that 
order, 
example: c("id","start","end")}

\item{splitvars}{- vector of column names containing dates to split by.
example: c("id","start","end","value","name") - must be in that order!}

\item{default}{- Value given to intervals not given a value by the function.}

\item{datacheck}{- This function would crash or produce incorrect results if
input data have overlapping intervals or negative intervals in any of the two
input datasets.  Ts is checked and error produced by datacheck. Can be 
set to FALSE if data are checked otherwise}
}
\value{
The function returns a new data table where records have been split according 
to the splitting guide dataset. Variables unrelated to the splitting are 
left unchanged.
}
\description{
split_from_to is devised to split a series of records in multiple records based
on entry/exit dates provided from another splitting guide dataset. The function
can handle multiple different events with each type of event characterized by
the variable "value".

The function is useful for analysis of data where temporary changes occur.
These may be drugs treatment, pregnancy etc.  For a situation of pregnancy
for example it may be useful for analysis to split a person into three 
records representing time before, during and after pregnancy.

The input is first "base data" id/in/out (and other variables) that
may already have been split by other functions.  The other data is a sequence 
of id/from/to/value/name - that may represent multiple conditions with 
from/to and with "name" to distinguish.

When no value is provided by the splitting guide the "default" is used. If
this is not provided the value is set to "0"
}
\details{
The input to this function are two data.tables and two lists of the critical 
variables.  The BASE data it the data to be split.
This data must have a variable to identify participants and start/end times. 

The other table (SPLITTINGUIDE) contains possibly multiple records for each 
participants with id/from/to/value/name - or just id/from/to

The program checks that intervals are not negative and that intervals for 
each "name" and each individual do not overlap.  Violation stops the program 
with error. Overlaps may occur in real situations, but the user needs to make 
decisions regarding this prior to using this function.

It is required that the splitting guide contains at least one record.  
Missing data for key variables are not allowed and will cause errors.
}
\examples{
library(data.table)
dat <- data.table(id=c("A","A","B","B","C","D"),
                 start=as.Date(c(0,100,0,100,200,400),origin='1970-01-01'),
                 end=as.Date(c(100,200,100,200,300,500),origin='1970-01-01'))
split <- data.table (id=c("A","A","A","A","B","B","B","D","D"),
                    start=as.Date(c(0,50,25,150,110,150,400,300,500),origin='1970-01-01'),
                    end= as.Date(c(25,75,150,151,120,250,500,400,500),origin='1970-01-01'),
                    value=c(1,2,3,4,1,2,3,6,7),
                    name=c("d1","d1","d2","d2","d1","d1","d2","d3","d4"))
#Show the dataset:
dat[]
split[]                   
temp <- split_from_to(dat # inddato with id/in/out/event
                   ,split # Data with id and dates
                   ,c("id","start","end") #names of id/in/out/event - in that order
                  ,c("id","start","end","value","name")) #Names var date-vars to split by
temp[]                   
}
\author{
Christian Torp-Pedersen
}
