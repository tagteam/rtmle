// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// split2
List split2(IntegerVector pnrnum, NumericVector inn, NumericVector out, IntegerVector event, IntegerVector mergevar, NumericMatrix split, int numcov);
RcppExport SEXP _rtmle_split2(SEXP pnrnumSEXP, SEXP innSEXP, SEXP outSEXP, SEXP eventSEXP, SEXP mergevarSEXP, SEXP splitSEXP, SEXP numcovSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type pnrnum(pnrnumSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type inn(innSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mergevar(mergevarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type split(splitSEXP);
    Rcpp::traits::input_parameter< int >::type numcov(numcovSEXP);
    rcpp_result_gen = Rcpp::wrap(split2(pnrnum, inn, out, event, mergevar, split, numcov));
    return rcpp_result_gen;
END_RCPP
}
// splitDate
List splitDate(NumericVector inn, NumericVector out, IntegerVector event, IntegerVector mergevar, IntegerVector seq, IntegerVector varname);
RcppExport SEXP _rtmle_splitDate(SEXP innSEXP, SEXP outSEXP, SEXP eventSEXP, SEXP mergevarSEXP, SEXP seqSEXP, SEXP varnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type inn(innSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mergevar(mergevarSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type varname(varnameSEXP);
    rcpp_result_gen = Rcpp::wrap(splitDate(inn, out, event, mergevar, seq, varname));
    return rcpp_result_gen;
END_RCPP
}
// splitFT
List splitFT(IntegerVector pnrnum, NumericVector inn, NumericVector out, IntegerVector event, IntegerVector mergevar, IntegerVector Spnrnum, std::vector<std::string> val, NumericVector start, NumericVector end, IntegerVector num, int numcov, String default_);
RcppExport SEXP _rtmle_splitFT(SEXP pnrnumSEXP, SEXP innSEXP, SEXP outSEXP, SEXP eventSEXP, SEXP mergevarSEXP, SEXP SpnrnumSEXP, SEXP valSEXP, SEXP startSEXP, SEXP endSEXP, SEXP numSEXP, SEXP numcovSEXP, SEXP default_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type pnrnum(pnrnumSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type inn(innSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type out(outSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mergevar(mergevarSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Spnrnum(SpnrnumSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type val(valSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type start(startSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type end(endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type num(numSEXP);
    Rcpp::traits::input_parameter< int >::type numcov(numcovSEXP);
    Rcpp::traits::input_parameter< String >::type default_(default_SEXP);
    rcpp_result_gen = Rcpp::wrap(splitFT(pnrnum, inn, out, event, mergevar, Spnrnum, val, start, end, num, numcov, default_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rtmle_split2", (DL_FUNC) &_rtmle_split2, 7},
    {"_rtmle_splitDate", (DL_FUNC) &_rtmle_splitDate, 6},
    {"_rtmle_splitFT", (DL_FUNC) &_rtmle_splitFT, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_rtmle(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
